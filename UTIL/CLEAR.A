* clear.a  1992-03-20 TD,  version 1.2 */
*
* This file contains proprietary information of IVT Electronic AB.
* Copying or reproduction without prior written approval is prohibited.
*
* This file is furnished under a license agreement or nondisclosure
* agreement. The software may be used or copied only in accordance 
* with the terms of the agreement.
*
* In no event will IVT Electronic AB, be liable for any lost revenue or
* profits or other special, indirect and consequential damages, even if
* IVT has been advised of the possibility of such damages.
*
* IVT Electronic AB
* Box 996
* 191 29 Sollentuna
* Sweden
*

*
* clear.a
* Copyright (C) 1991,1992 IVT Electronic AB.
*


* File      :     clear.a
* Function  :     clears the sync bytes of the four data modules
* Notes     :     Runs in supervisor state
*
* History:
* date    rev   who   what
* ------  ----  ---   ---------------------------------------------
* 910430  1.00  TD    Wrote code
* 920320  1.20  TD    Changed to 5 modules, VARS, VAR2, VAR1, ALARM & LOCK
*
* The modules starts at addresses 
*   $20000, 
*   $20000 + sizeof(module 1), 
*   $20000 + sizeof(module 1) + sizeof(module 2). 
*   $20000 + sizeof(module 1) + sizeof(module 2) + sizeof(module 3). 
*
type     set      (1<<8)+1 
revs     set      (160<<8)+1
         psect    v,type,revs,1,256,main

main:    move.l   #131072,d0            $20000 address of first mod
         bsr.s    clearIt               clear sync bytes and update d0
         bcs.s    err                   exit on error
         bsr.s    clearIt               clear next
         bcs.s    err
         bsr.s    clearIt               and next
         bcs.s    err
         bsr.s    clearIt               and next
         bcs.s    err
         bsr.s    clearIt               and next
         bcs.s    err
         moveq.l  #0,d1                 mark no error
err      move.l   d1,d0                 
         os9      F$Exit

clearIt  move.l   d0,a0
         cmpi.b   #$4a,(a0)
         bne.s    noModule
         cmpi.b   #$fc,1(a0)
         bne.s    noModule
         move.b   #0,(a0)
         move.l   4(a0),d1
         add.l    d1,d0
         rts

noModule move.l   #221,d1
         move     #1,ccr
         rts
