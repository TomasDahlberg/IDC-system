* shownode.a  1992-11-12 TD,  version 1.2 */
*
* This file contains proprietary information of IVT Electronic AB.
* Copying or reproduction without prior written approval is prohibited.
*
* This file is furnished under a license agreement or nondisclosure
* agreement. The software may be used or copied only in accordance 
* with the terms of the agreement.
*
* In no event will IVT Electronic AB, be liable for any lost revenue or
* profits or other special, indirect and consequential damages, even if
* IVT has been advised of the possibility of such damages.
*
* IVT Electronic AB
* Box 996
* 191 29 Sollentuna
* Sweden
*

*
* shownode.a
* Copyright (C) 1992 IVT Electronic AB.
*

* File      :     shownode.a
* Function  :     Shows the node number
* Notes     :     
*
* History:
* date    rev   who   what
* ------  ----  ---   ---------------------------------------------
* 920408  1.00  TD    Wrote code
* 920513  1.10  TD    Bugfix, couldn't write 0 before.
* 921112  1.20  TD    Added text 'master' if node 0 or node >= 512
*                     Skips bit9 in nodeno
*
* Shows node number from address $0402
*
* 0     -> Nodadress=0,master
* 17    -> Nodadress=17
* 512+7 -> Nodadress=7,master
*
*
type     set      (1<<8)+1 
revs     set      (128<<8)+1
         psect    v,type,revs,2,256,main

str	 dc.b   "Nodadress="
mast	 dc.b   ",master"

main:    lea.l	  str(pc),a0
	 moveq	  #10,d1
	 moveq    #1,d0
	 os9	  I$Write

         subq.l   #4,a7
	 movea.l  #$402,a0
         move.w   (a0),d0
	 moveq    #0,d3

         andi.w   #255,d0        remove b9, master bit and bit 8

*         move.w   #10000,d1
*         bsr.s    tal
         move.w   #1000,d1
         bsr.s    tal
         move.w   #100,d1
         bsr.s    tal
         move.w   #10,d1
         bsr.s    tal
         move.w   #1,d1
         moveq    #1,d3	       920513, telling we have started, if not before
         bsr.s    tal
	 addq.l   #4,a7

	 movea.l  #$402,a0
         move.w   (a0),d0
         beq.s    master
         andi.w   #512,d0
         beq.s    slave
master   lea.l	  mast(pc),a0
	 moveq	  #7,d1
	 moveq    #1,d0
	 os9	  I$Write

slave    moveq    #0,d1        no error
         os9      F$Exit
	 
*
*     d0	in argument to display
*     d1        what exponetial to display
*     d2        temporary storage of figure
*     d3        static flag, 1= we have started
*     a0        temporary pointer to stack, where figure is temp. stored
*
tal      moveq    #0,d2		   write this figure, if needed
         cmp.w    d1,d0
         bcs.s    notyet
         divu.w   d1,d0		   d0:= d0/d1
         move.b   d0,d2		   get lower (16bits) == quotient
         swap.w   d0               make lower 16bits == remainder
         andi.l   #$ffff,d0
         moveq    #1,d3	           flag, telling we have started
*
*        now, just write the figure in d2 and return
*        
notyet   tst.b    d3
         beq.s    noprint
         addi.b   #48,d2
         move.b   d2,(a7)
	 lea.l    (a7),a0
         move.l   d0,-(a7)
	 moveq    #1,d1
         moveq    #1,d0             stdout
         os9      I$Write 
         move.l   (a7)+,d0        
noprint	 rts
